// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model images {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  url String

  userId String? @db.ObjectId
  users  users?  @relation(fields: [userId], references: [id])

  sellerId String?  @db.ObjectId
  sellers  sellers? @relation(fields: [sellerId], references: [id])

  shopId String? @db.ObjectId
  shop   shops?  @relation(fields: [shopId], references: [id])

  products   products? @relation(fields: [productsId], references: [id])
  productsId String?   @db.ObjectId
}

model users {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String        @unique
  password    String?
  following   String[]
  avatar      images[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  shopReviews shopReviews[]
}

model sellers {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String @unique
  password     String
  phone_number String
  country      String

  shop   shops?
  shopId String? @unique @db.ObjectId

  discount_codes discount_codes[]

  products products[]

  images images[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model shopReviews {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  users     users    @relation(fields: [userId], references: [id])
  shopId    String   @db.ObjectId
  shop      shops    @relation(fields: [shopId], references: [id])
  ratings   Float    @default(0)
  review    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model shops {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  bio          String
  category     String
  address      String
  avatar       images[]
  coverBanner  String?
  openingHours String?
  website      String?
  socialLinks  Json[]
  ratings      Float         @default(0)
  reviews      shopReviews[]

  seller   sellers @relation(fields: [sellerId], references: [id])
  sellerId String  @unique @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products products[]
}

model site_config {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  categories String[]
}

model discount_codes {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  discountValue String
  discountCode  String  @unique
  discountType  String
  sellerId      String  @db.ObjectId
  seller        sellers @relation(fields: [sellerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products products[]
}

model products {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  title                 String
  price                 String
  category              String
  description           String
  tags                  String[]
  stock                 String
  cash_on_delivery      String
  custom_specifications Json?
  images                images[]
  ratings               Float           @default(0)
  sellerId              String          @db.ObjectId
  seller                sellers         @relation(fields: [sellerId], references: [id])
  discount_codesId      String?         @db.ObjectId
  discount_codes        discount_codes? @relation(fields: [discount_codesId], references: [id])
  shopId                String          @db.ObjectId
  shop                  shops           @relation(fields: [shopId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
